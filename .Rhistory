head(rand.diff)
head(rand.diffsapply)
# do a 2-sample t-test
t.test(qpcr$dct~qpcr$trt)
# do a randomization test for difference in means
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,mean))
reps <- 10000
rand.diff <- NULL
startappl <- Sys.time()
set.seed(30)
rand.diffsapply <- sapply(1:reps, function(rep){
rindx<-sample(qpcr$trt)
diffout <- diff(tapply(qpcr$dct,rindx,mean))
diffout
})
endapp <- Sys.time()
startappl-endapp
startfor <- Sys.time()
set.seed(30)
for (i in 1:reps) {
rindx <- sample(qpcr$trt)
rand.diff[i] <- diff(tapply(qpcr$dct,rindx,mean))
}
endfor<-Sys.time()
startfor-endfor
# do a 2-sample t-test
t.test(qpcr$dct~qpcr$trt)
# do a randomization test for difference in means
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,mean))
reps <- 10000
rand.diff <- NULL
startappl <- Sys.time()
set.seed(30)
rand.diffsapply <- sapply(1:reps, function(rep){
diff(tapply(qpcr$dct,sample(qpcr$trt),mean))
})
endapp <- Sys.time()
startappl-endapp
startfor <- Sys.time()
set.seed(30)
for (i in 1:reps) {
rindx <- sample(qpcr$trt)
rand.diff[i] <- diff(tapply(qpcr$dct,rindx,mean))
}
endfor<-Sys.time()
startfor-endfor
rand.diffsapply <- sapply(1:reps, function(rep){
data.frame(qpcr$dct,sample(qpcr$trt),rep)
})
head(rand.diffsapply)
rand.diffsapply <- do.call(rbind,lapply(1:reps, function(rep){
data.frame(qpcr$dct,sample(qpcr$trt),rep)
}))
head(rand.diffsapply)
hist(rand.diff,main="randomized sampling distribution",
xlab=expression(paste("Difference in mean ",Delta,C[t]," (treatment - control)")),
xlim=c(-1,1))
points(obs.diff,100,cex=2.5,pch=16)
text(obs.diff,200,"observed",cex = 0.5)
abline(v = -.414, col="red")
text(-0.46,1000,"CI: 0.05", srt=90,cex=0.5)
abline(v= -0.956, col="red")
text(-0.99, 1000, "CI 0.95", srt=90, cex=0.5)
pval <- mean(abs(rand.diff)>abs(obs.diff))
pval
# do a randomization test for difference in means
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,mean))
reps <- 10000
rand.diff <- NULL
set.seed(30)
rand.diff <- do.call(rbind, lapply(seq(12,2,-2), function(x){
diffs<-c()
for(i in 1:reps){
qpcr.sam <- qpcr[c(sample(1:12, x),
sample(13:24, x)),]
qpcr.sam$randtrt <- sample(qpcr.sam$trt)
diffs[i] <- diff(tapply(qpcr.sam$dct,qpcr.sam$randtrt,mean))
}
diff.out <- data.frame(DiffMean = diffs,SampleSize = x)
})
)
library(ggplot2)
ggplot(rand.diff, aes(DiffMean, fill=as.factor(SampleSize)))+
geom_density(alpha=0.25)+
theme_bw()+
xlab(expression(paste("Difference in mean ",Delta,C[t]," (treatment - control)")))+
scale_fill_discrete(name = "Sample Size")+
geom_text(aes(x=-0.78,y=0.25), label="Obs diff",
angle=90)+
geom_vline(aes(xintercept = -0.68))
#The peak, max value?
# do a randomization test for difference in means
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,max))
reps <- 10000
rand.diff <- NULL
set.seed(30)
for (i in 1:reps) {
rindx <- sample(qpcr$trt)
rand.diff[i] <- diff(tapply(qpcr$dct,rindx,max))
}
hist(rand.diff,main="randomized sampling distribution",
xlab=expression(paste("Difference in maximum ",Delta,C[t]," (treatment - control)")))
points(obs.diff,0,cex=2.5,pch=16)
text(obs.diff,200,"observed",cex = 0.5)
pval <- mean(abs(rand.diff)>abs(obs.diff))
pval
#No, terrible bimodal strange behaviour.
#The peak, mean value?
# do a randomization test for difference in means to compare to the median
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,mean))
qpcr$dct
qpcr$trt
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,mean))
qpcr
str(obs.diff)
rm(obs.diff)
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,mean))
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,mean))
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,mean))
# do a randomization test for difference in means
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,mean))
reps <- 10000
rand.diff <- NULL
set.seed(30)
rand.diff <- do.call(rbind, lapply(seq(12,2,-2), function(x){
diffs<-c()
for(i in 1:reps){
qpcr.sam <- qpcr[c(sample(1:12, x),
sample(13:24, x)),]
qpcr.sam$randtrt <- sample(qpcr.sam$trt)
diffs[i] <- diff(tapply(qpcr.sam$dct,qpcr.sam$randtrt,mean))
}
diff.out <- data.frame(DiffMean = diffs,SampleSize = x)
})
)
library(ggplot2)
ggplot(rand.diff, aes(DiffMean, fill=as.factor(SampleSize)))+
geom_density(alpha=0.25)+
theme_bw()+
xlab(expression(paste("Difference in mean ",Delta,C[t]," (treatment - control)")))+
scale_fill_discrete(name = "Sample Size")+
geom_text(aes(x=-0.78,y=0.25), label="Obs diff",
angle=90)+
geom_vline(aes(xintercept = -0.68))
#The peak, mean value?
# do a randomization test for difference in means to compare to the median
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,mean))
#The peak, mean value?
# do a randomization test for difference in means to compare to the median
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,mean))
reps <- 10000
rand.diff <- NULL
set.seed(30)
for (i in 1:reps) {
rindx <- sample(qpcr$trt)
rand.diff[i] <- diff(tapply(qpcr$dct,rindx,mean))
}
hist(rand.diff,main="randomized sampling distribution",
xlab=expression(paste("Difference in mean ",Delta,C[t]," (treatment - control)")))
points(obs.diff,0,cex=2.5,pch=16)
text(obs.diff,200,"observed",cex = 0.5)
#The peak, median value?
# do a randomization test for difference in median
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,median))
reps <- 10000
rand.diff <- NULL
set.seed(30)
for (i in 1:reps) {
rindx <- sample(qpcr$trt)
rand.diff[i] <- diff(tapply(qpcr$dct,rindx,median))
}
hist(rand.diff,main="randomized sampling distribution",
xlab=expression(paste("Difference in median ",Delta,C[t]," (treatment - control)")))
points(obs.diff,0,cex=2.5,pch=16)
text(obs.diff,200,"observed",cex = 0.5)
pval <- mean(abs(rand.diff)>abs(obs.diff))
pval
# do a randomization test for difference in medians
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,median))
reps <- 10000
set.seed(30)
diffs <- sapply(1:reps, function(sim){
median(sample(qpcr$dct, 12, replace=TRUE))-
median(sample(qpcr$dct, 12, replace=TRUE))
})
#Is the obs.diff within the upper and lower quatiles of the rand.diff distribution?
#There will be a few NAs because of the next when sampled fewer than 2 of
diffs.matrix <- matrix(diffs, 100)
hist(diffs)
# My own made up way:
CI95 <- do.call(rbind,lapply(1:100,function(row){
data.frame(CI95=quantile(diffs.matrix[row,],0.95),
CI05=quantile(diffs.matrix[row,],0.05))
}))
# Try following page 41 in the book!
se.dist <- sapply(1:100, function(row){
sd(diffs.matrix[row,]/sqrt(length(diffs.matrix[row,]))) #it's 100, a 100x100 matrix
})
hist(se.dist)
#95% of the time contain $\mu$ - Not quite the quantile...
mu <- mean(diffs)
mean(CI95$CI95>mu)
mean(CI95$CI05<mu)
# Right, give a normal distribution of the 0.05% on either tail (1-0.05/2)
Q <- qnorm(1-0.05/2) #1.959964
interval.dist <- do.call(rbind,lapply(1:100, function(row){
c(mean(diffs.matrix[row,]-Q*se.dist[row]),mean(diffs.matrix[row,]+Q*se.dist[row]))
}))
plot(seq(-.1,.1,length=100),1:100,type="n",xlab="difference in medians",
ylab="interval")
abline(v=mean(diffs))
for(i in 1:100){
covered<- obs.diff <= interval.dist[i,2] &
mean(obs.diff) >= interval.dist[i,1]
color <- ifelse(covered, "blue","red")
lines(interval.dist[i,], c(i,i),col=color)
}
hist(rand.diff,main="randomized sampling distribution",
xlab=expression(paste("Difference in median ",Delta,C[t]," (treatment - control)")))
points(obs.diff,0,cex=2.5,pch=16)
text(obs.diff,200,"observed",cex = 0.5)
abline(v=obs.diff-qnorm(1-0.05/2)*mean(se.dist), col="red")
abline(v=obs.diff+qnorm(1-0.05/2)*mean(se.dist), col="red")
obs.diff-qnorm(1-0.05/2)*mean(se.dist) #-0.66
obs.diff+qnorm(1-0.05/2)*mean(se.dist) #-0.58
mean(diffs)
interval.dist[1,]
?lies
?lines
hist(rand.diff,main="randomized sampling distribution",
xlab=expression(paste("Difference in median ",Delta,C[t]," (treatment - control)")))
points(obs.diff,0,cex=2.5,pch=16)
text(obs.diff,200,"observed",cex = 0.5)
abline(v=obs.diff-qnorm(1-0.05/2)*mean(se.dist), col="red")
abline(v=obs.diff+qnorm(1-0.05/2)*mean(se.dist), col="red")
plot(seq(-.1,.1,length=100),1:100,type="n",xlab="difference in medians",
ylab="interval")
abline(v=mean(diffs))
for(i in 1:100){
covered<- obs.diff <= interval.dist[i,2] &
mean(obs.diff) >= interval.dist[i,1]
color <- ifelse(covered, 1,2)
lines(interval.dist[i,], c(i,i),col=color)
}
plot(seq(-.1,.1,length=100),1:100,type="n",xlab="difference in medians",
ylab="interval")
abline(v=mean(diffs))
for(i in 1:100){
covered<- obs.diff <= interval.dist[i,2] &
mean(obs.diff) >= interval.dist[i,1]
color <- ifelse(covered, 1,2)
lines(interval.dist[i,], c(i,i),col=color)
}
# do a randomization test for difference in medians
obs.diff <- diff(tapply(qpcr$dct,qpcr$trt,median))
reps <- 10000
set.seed(30)
diffs <- sapply(1:reps, function(sim){
median(sample(qpcr$dct, 12, replace=TRUE))-
median(sample(qpcr$dct, 12, replace=TRUE))
})
#Is the obs.diff within the upper and lower quatiles of the rand.diff distribution?
#There will be a few NAs because of the next when sampled fewer than 2 of
diffs.matrix <- matrix(diffs, 100)
hist(diffs)
# My own made up way:
CI95 <- do.call(rbind,lapply(1:100,function(row){
data.frame(CI95=quantile(diffs.matrix[row,],0.95),
CI05=quantile(diffs.matrix[row,],0.05))
}))
# Try following page 41 in the book!
se.dist <- sapply(1:100, function(row){
sd(diffs.matrix[row,]/sqrt(length(diffs.matrix[row,]))) #it's 100, a 100x100 matrix
})
hist(se.dist)
#95% of the time contain $\mu$ - Not quite the quantile...
mu <- mean(diffs)
mean(CI95$CI95>mu)
mean(CI95$CI05<mu)
# Right, give a normal distribution of the 0.05% on either tail (1-0.05/2)
Q <- qnorm(1-0.05/2) #1.959964
interval.dist <- do.call(rbind,lapply(1:100, function(row){
c(mean(diffs.matrix[row,]-Q*se.dist[row]),mean(diffs.matrix[row,]+Q*se.dist[row]))
}))
plot(seq(-.1,.1,length=100),1:100,type="n",xlab="difference in medians",
ylab="interval")
abline(v=mean(diffs))
for(i in 1:100){
covered<- obs.diff <= interval.dist[i,2] &
mean(obs.diff) >= interval.dist[i,1]
color <- ifelse(covered, 1,2)
lines(interval.dist[i,], c(i,i),col=color)
}
hist(rand.diff,main="randomized sampling distribution",
xlab=expression(paste("Difference in median ",Delta,C[t]," (treatment - control)")))
points(obs.diff,0,cex=2.5,pch=16)
text(obs.diff,200,"observed",cex = 0.5)
abline(v=obs.diff-qnorm(1-0.05/2)*mean(se.dist), col="red")
abline(v=obs.diff+qnorm(1-0.05/2)*mean(se.dist), col="red")
obs.diff-qnorm(1-0.05/2)*mean(se.dist) #-0.66
obs.diff+qnorm(1-0.05/2)*mean(se.dist) #-0.58
mean(diffs)
interval.dist[1,]
hist(rand.diff,main="randomized sampling distribution",
xlab=expression(paste("Difference in median ",Delta,C[t]," (treatment - control)")))
points(obs.diff,0,cex=2.5,pch=16)
text(obs.diff,200,"observed",cex = 0.5)
abline(v=obs.diff-qnorm(1-0.05/2)*mean(se.dist), col="red")
abline(v=obs.diff+qnorm(1-0.05/2)*mean(se.dist), col="red")
abline(v=obs.diff-qnorm(1-0.05/2)*min(se.dist), col="black")
abline(v=obs.diff+qnorm(1-0.05/2)*max(se.dist), col="black")
hist(rand.diff,main="randomized sampling distribution",
xlab=expression(paste("Difference in median ",Delta,C[t]," (treatment - control)")))
points(obs.diff,0,cex=2.5,pch=16)
text(obs.diff,200,"observed",cex = 0.5)
abline(v=obs.diff-qnorm(1-0.05/2)*mean(se.dist), col="red")
abline(v=obs.diff+qnorm(1-0.05/2)*mean(se.dist), col="red")
abline(v=obs.diff-qnorm(1-0.05/2)*max(se.dist), col="black")
abline(v=obs.diff+qnorm(1-0.05/2)*max(se.dist), col="black")
obs.diff-qnorm(1-0.05/2)*max(se.dist)
obs.diff+qnorm(1-0.05/2)*max(se.dist)
exfc <- 2^diff(tapply(qpcr$dct,qpcr$trt,median))
exfc #difference in median is 0.65 as an expression of fold change
n <- nrow(qpcr) #there are 24 samples or rows
indx <- sample(1:n,n,T) #Want to sample 24 from these 24 with replacement
boot <- qpcr[indx,] #make a new data.frame with the rows selected at random with replacement
tail(boot) #look at the last 6 rows, can see that row 21 and 14 were selected twice (ie. 21.1 and 14.1 row names)
exfc.boot <- 2^diff(tapply(boot$dct,boot$trt,median))
exfc.boot #in this null or bootstrapped sample, the fold increase is 0.54
reps <- 5000
set.seed(3023)
boot.exfc <- NULL
for(i in 1:reps){
indx <- sample(1:n,n,TRUE)
boot<-qpcr[indx,]
boot.exfc[i] <- 2^diff(tapply(boot$dct,boot$trt,median))
}
hist(boot.exfc)
hist(boot.exfc, main="Bootstrapped 5,000 reps")
abline(v=mean(boot.exfc)-qnorm(1-0.05/2)*(sd(boot.exfc)/sqrt(n)),col="red") #0.62
abline(v=mean(boot.exfc)+qnorm(1-0.05/2)*(sd(boot.exfc)/sqrt(n)),col="red") #0.68
boxplot(boot.exfc)
hist(boot.exfc, main="Bootstrapped 5,000 reps")
density(boot.exfc)
abline(v=mean(boot.exfc)-qnorm(1-0.05/2)*(sd(boot.exfc)/sqrt(n)),col="red") #0.62
abline(v=mean(boot.exfc)+qnorm(1-0.05/2)*(sd(boot.exfc)/sqrt(n)),col="red") #0.68
rm(list=ls())
library(raster)
library(rgdal)
library(maptools)
library(devtools)
library(ecodist)
library(vegan)
library(MASS)
library(prism)
library(dismo)
library(ggplot2)
library(Imap)
library(wordcloud)
library(MASS)
library(adegenet)
library(pegas)
library(ape)
library(ade4)
library(ggmap)
library(vegan)
#install.packages("PCNM") # not avaliable for 3.3.1, a funciton in vegan?
library(boot)
#install_git("rforge/sedar/pkg/AEM")
#install_github("rforge/sedar/pkg/PCNM")
library(ecodist)
library(geosphere)
library(poppr)
ph.dist <- read.csv("Q:/Research/Lab/Projects/Phacelia formosula/Project Information/Phacelia project information with GPS centroids 2016_pdm.csv")
#Convert the Northing/Easting to lat/long
ph.dist.UTM <- SpatialPoints(ph.dist[,c("Easting","Northing")],
proj4string = CRS("+proj=utm +zone=13 +datum=NAD83"))
ph.dist.LatLon <- spTransform(ph.dist.UTM, CRS("+proj=longlat +datum=WGS84"))
ph.dist <- data.frame(ph.dist,ph.dist.LatLon)
#These are just populations, not individuals
spatialdist.noTC <- dist(ph.dist[-15,3:4]) #exclude Troublesome Creek
spatialdist.TC <- dist(ph.dist[,3:4])
# from DAPC and <http://adegenet.r-forge.r-project.org/files/tutorial-basics.pdf>
#Dgeo <- spatialdist.noTC
ggmap(get_map(c(-107,40.25,-105.25,41)))+
geom_point(data=ph.dist, aes(Easting.1,Northing.1))
# Genepop input file with PhGi (TC) 431 individuals
#phall <- read.genepop("C:/Users/deprengm/Dropbox/Denver Botanic Gardens Postdoctoral Genetic Files/Phacelia project/Riser/Genepop/PhfoAllGenePop_13Dec2016.gen")
phall <- read.genepop("C:/Users/deprengm/Dropbox/Denver Botanic Gardens Postdoctoral Genetic Files/Phacelia project/Manuscript/GenAlExAnalyses_Nov2017/Genpop_PhfoData_Nov2017.gen")
table(phall@pop)
#Change to match T -> TC; F -> FC; B -> BR
currentlevels <- levels(phall@pop)
currentlevels[currentlevels=="T"] <- "TC"
currentlevels[currentlevels=="F"] <- "FC"
currentlevels[currentlevels=="B"] <- "BR"
levels(phall@pop) <- currentlevels
ph1 <- phall[phall@pop != "TC"] #395 individuals
table(ph1@pop)
#Can store spatial informaiton in @other$xy
# Location information for each individual under Northing/Easting (need lat/lon) for individuals as $Code AN... and $Ind. 1:30
phfo.gen <- read.csv("Q:/Research/Lab/Projects/Phacelia formosula/Project Information/Phacelia project information with GPS data 2016_all.csv")
nrow(phfo.gen) #451 - some individuals were thrown out for the genetic data.
table(phfo.gen$Code)
table(phfo.gen$Code[phfo.gen$DNA.Vial.in.Freezer...9.12.2016.inventory. == "YES"])
#Still match these locaitons with the individuals from phall
table(phall@pop,phall@tab)
# Genepop input file with PhGi (TC) 431 individuals
#phall <- read.genepop("C:/Users/deprengm/Dropbox/Denver Botanic Gardens Postdoctoral Genetic Files/Phacelia project/Riser/Genepop/PhfoAllGenePop_13Dec2016.gen")
phall <- read.genepop("C:/Users/deprengm/Dropbox/Denver Botanic Gardens Postdoctoral Genetic Files/Phacelia project/Manuscript/GenAlExAnalyses_Nov2017/Genpop_PhfoData_Nov2017.gen")
table(phall@pop)
#Change to match T -> TC; F -> FC; B -> BR
currentlevels <- levels(phall@pop)
currentlevels[currentlevels=="T"] <- "TC"
currentlevels[currentlevels=="F"] <- "FC"
currentlevels[currentlevels=="B"] <- "BR"
levels(phall@pop) <- currentlevels
ph1 <- phall[phall@pop != "TC"] #395 individuals
table(ph1@pop)
#Can store spatial informaiton in @other$xy
# Location information for each individual under Northing/Easting (need lat/lon) for individuals as $Code AN... and $Ind. 1:30
phfo.gen <- read.csv("Q:/Research/Lab/Projects/Phacelia formosula/Project Information/Phacelia project information with GPS data 2016_all.csv")
nrow(phfo.gen) #451 - some individuals were thrown out for the genetic data.
table(phfo.gen$Code)
table(phfo.gen$Code[phfo.gen$DNA.Vial.in.Freezer...9.12.2016.inventory. == "YES"])
phfo.indloc <- read.csv("C:/Users/deprengm/Dropbox/Denver Botanic Gardens Postdoctoral Genetic Files/Phacelia project/Manuscript/GenAlExAnalyses_Nov2017/LatLon_PhfoData_Nov2017.csv")
table(phfo.indloc$SimpleCode)
curlev <- levels(phfo.indloc$SimpleCode)
curlev[curlev=="T"] <- "TC"
curlev[curlev=="F"] <- "FC"
curlev[curlev=="B"] <- "BR"
levels(phfo.indloc$SimpleCode) <- curlev
#Morphology
phfo.loc <- read.csv("C:/Users/deprengm/Dropbox/Denver Botanic Gardens Postdoctoral Genetic Files/Phacelia project/Phacelia 2014 collection and morphology data/geoloc_ph.csv")
table(phfo.loc$Population.Code)
#phall are individuals from phfo.indloc
# So take the SimpleCode and IndNum from phfo.indloc and the Northing and Easting from phfo.gen matching Code and Ind.
# First get the names to match from
phfo.UTM <- merge(phfo.gen,phfo.indloc[,c(1,3:4)],
by.x=c("Code","Ind."),by.y=c("SimpleCode","IndNum"))
table(phfo.UTM$Code)
sum(table(phfo.UTM$Code)) #425
#Convert phfo.UTM$Easting and $Northing to lat/lon
phfo.UTM.SP <- SpatialPoints(phfo.UTM[,c("Easting","Northing")],
proj4string = CRS("+proj=utm +zone=13 +datum=NAD83"))
phfo.LatLon <- spTransform(phfo.UTM.SP, CRS("+proj=longlat +datum=WGS84"))
phfo.UTM <- data.frame(phfo.UTM,phfo.LatLon)
names(phfo.UTM) <- c(names(phfo.UTM)[-c((length(phfo.UTM)-1):length(phfo.UTM))],"lon","lat")
#Want XY coordinates from phfo.gen that are individuals found in gen.ind
phall@other$xy <- phfo.UTM[,c("lon","lat")]
ph1@other$xy <- phfo.UTM[-grep("TC",phfo.UTM$Code),c("lon","lat")]
nrow(phall@other$xy) #425
Dgen <- dist.genpop(genind2genpop(phall), method=1) #1: Nei's 2: Angular Edward's Euclidean distance
Dgenind <- dist(phall@tab) #euclidean
Dgenind.maximum <- dist(phall@tab, method="max")
Dgeo <- dist(phall$other$xy)
#These are the genetic and geographic distance for 425 individuals
ibd <- mantel.randtest(Dgenind,Dgeo) #OH dear, Dgen is 15 populations, Dgeo are all individuals
ibd
plot(ibd)
ibdmax <- mantel.randtest(Dgeo,Dgenind.maximum)
ibdmax
#vegan version
vegan::mantel(Dgeo,Dgenind, permutations = 9999)
plot(Dgeo,Dgenind)
abline(lm(Dgenind~Dgeo))
summary(lm(Dgenind~Dgeo))
## without TC Phacelia gina-glennea
Dgenind.noTC <- dist(ph1@tab) #euclidean
Dgenind.maximum.noTC <- dist(ph1@tab, method="max")
Dgeo.noTC <- dist(ph1$other$xy)
#These are the genetic and geographic distance for 425 individuals
ibd.noTC <- mantel.randtest(Dgenind.noTC,Dgeo.noTC) #OH dear, Dgen is 15 populations, Dgeo are all individuals
ibd.noTC
plot(ibd.noTC)
ibdmax <- mantel.randtest(Dgeo,Dgenind.maximum)
ibdmax
#vegan version
vegan::mantel(Dgeo,Dgenind, permutations = 9999)
# 1. Classical IBD would result in continuous clines of genetic differentiation
# 2. distant and differentiated populations also results in this pattern. So...
#plot both distances
plot(Dgeo.tc,Dgen.tc)
#Plot- can see patches
dens.tc <- kde2d(Dgeo.tc,Dgen.tc, n=300)
plot(ibd.noTC)
plot(ibd.noTC)
ibdmax <- mantel.randtest(Dgeo,Dgenind.maximum)
ibdmax
plot(Dgeo.noTC,Dgenind.noTC)
plot(Dgeo.noTC,Dgenind.noTC)
abline(lm(Dgenind.noTC~Dgeo.noTC), col="red",lty=2)
Dgeo.tc
dens.tc <- kde2d(Dgeo.noTC,Dgenind.noTC, n=300)
myPal <- colorRampPalette(c("white","blue","gold", "orange", "red"))
plot(Dgeo.tc, Dgen.tc, pch=20,cex=.5)
plot(Dgeo.tc, Dgenind.noTC, pch=20,cex=.5)
plot(Dgeo.noTC, Dgenind.noTC, pch=20,cex=.5)
image(dens.tc, col=transp(myPal(300),.7), add=TRUE)
abline(lm(Dgen.tc~Dgeo.tc))
plot(Dgeo.noTC, Dgenind.noTC, pch=20,cex=.5)
image(dens.tc, col=transp(myPal(300),.7), add=TRUE)
abline(lm(Dgenind.noTC~Dgeo.noTC))
title("Isolation by distance plot")
ph.dist
#Convert the Northing/Easting to lat/long
ptsutm <- SpatialPoints(phfo.gen[,c("Easting","Northing")],
proj4string = CRS("+proj=utm +zone=13 +datum=NAD83"))
ptsgeo <- spTransform(ptsutm, CRS("+proj=longlat +datum=WGS84"))
latlonphfo <- data.frame(phfo.gen,ptsgeo)
ggmap(get_map(c(-107,40.5,-105.5,41)))+
geom_point(data=data, aes(long,lat,shape=Population.Code),size=4)+ #from Zapata_Phacelia.Rmd
geom_point(data=latlonphfo, aes(Easting.1,Northing.1,colour=Population))
